"use strict";(self.webpackChunklukso_node_guide=self.webpackChunklukso_node_guide||[]).push([[8973],{1470:(e,n,s)=>{s.d(n,{A:()=>k});var r=s(6540),t=s(4164),i=s(3104),o=s(6347),l=s(205),a=s(7485),d=s(1682),c=s(679);function h(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:s}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return h(e).map((({props:{value:e,label:n,attributes:s,default:r}})=>({value:e,label:n,attributes:s,default:r})))}(s);return function(e){const n=(0,d.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,s])}function x({value:e,tabValues:n}){return n.some((n=>n.value===e))}function p({queryString:e=!1,groupId:n}){const s=(0,o.W6)(),t=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,a.aZ)(t),(0,r.useCallback)((e=>{if(!t)return;const n=new URLSearchParams(s.location.search);n.set(t,e),s.replace({...s.location,search:n.toString()})}),[t,s])]}function g(e){const{defaultValue:n,queryString:s=!1,groupId:t}=e,i=u(e),[o,a]=(0,r.useState)((()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!x({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const s=n.find((e=>e.default))??n[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:i}))),[d,h]=p({queryString:s,groupId:t}),[g,m]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[s,t]=(0,c.Dv)(n);return[s,(0,r.useCallback)((e=>{n&&t.set(e)}),[n,t])]}({groupId:t}),j=(()=>{const e=d??g;return x({value:e,tabValues:i})?e:null})();(0,l.A)((()=>{j&&a(j)}),[j]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!x({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);a(e),h(e),m(e)}),[h,m,i]),tabValues:i}}var m=s(2303);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var f=s(4848);function y({className:e,block:n,selectedValue:s,selectValue:r,tabValues:o}){const l=[],{blockElementScrollPositionUntilNextRender:a}=(0,i.a_)(),d=e=>{const n=e.currentTarget,t=l.indexOf(n),i=o[t].value;i!==s&&(a(n),r(i))},c=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const s=l.indexOf(e.currentTarget)+1;n=l[s]??l[0];break}case"ArrowLeft":{const s=l.indexOf(e.currentTarget)-1;n=l[s]??l[l.length-1];break}}n?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.A)("tabs",{"tabs--block":n},e),children:o.map((({value:e,label:n,attributes:r})=>(0,f.jsx)("li",{role:"tab",tabIndex:s===e?0:-1,"aria-selected":s===e,ref:e=>{l.push(e)},onKeyDown:c,onClick:d,...r,className:(0,t.A)("tabs__item",j.tabItem,r?.className,{"tabs__item--active":s===e}),children:n??e},e)))})}function v({lazy:e,children:n,selectedValue:s}){const i=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=i.find((e=>e.props.value===s));return e?(0,r.cloneElement)(e,{className:(0,t.A)("margin-top--md",e.props.className)}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function w(e){const n=g(e);return(0,f.jsxs)("div",{className:(0,t.A)("tabs-container",j.tabList),children:[(0,f.jsx)(y,{...n,...e}),(0,f.jsx)(v,{...n,...e})]})}function k(e){const n=(0,m.A)();return(0,f.jsx)(w,{...e,children:h(e.children)},String(n))}},2882:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>x,frontMatter:()=>a,metadata:()=>r,toc:()=>h});const r=JSON.parse('{"id":"guides/modifications/service-automation","title":"7.7 Service Automation","description":"By default, blockchain clients are not automatically starting whenever there has been a power outage or crash on your node system. This means additional manual work by logging into the node and restarting clients or services. As the LUKSO CLI manages all blockchain clients in the background, we can add a startup script to run every time on boot.","source":"@site/docs/guides/modifications/service-automation.md","sourceDirName":"guides/modifications","slug":"/guides/modifications/service-automation","permalink":"/docs/guides/modifications/service-automation","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_label":"7.7 Service Automation","sidebar_position":7},"sidebar":"guidesSidebar","previous":{"title":"7.6 Dynamic DNS","permalink":"/docs/guides/modifications/dynamic-dns"},"next":{"title":"8.1 Software Preparation","permalink":"/docs/guides/monitoring/software-preparation"}}');var t=s(4848),i=s(8453),o=s(1470),l=s(9365);const a={sidebar_label:"7.7 Service Automation",sidebar_position:7},d="7.7 Service Automation",c={},h=[{value:"1. Stop Node Operation",id:"1-stop-node-operation",level:2},{value:"2. Create System User",id:"2-create-system-user",level:2},{value:"3. Add Password File",id:"3-add-password-file",level:2},{value:"4. Add Startup Script",id:"4-add-startup-script",level:2},{value:"5. Restrict Access Rights",id:"5-restrict-access-rights",level:2},{value:"6. Configure Service File",id:"6-configure-service-file",level:2},{value:"7. Restart the Node",id:"7-restart-the-node",level:2},{value:"8. Check Service Status",id:"8-check-service-status",level:2},{value:"Maintenance",id:"maintenance",level:2},{value:"Revert Setup",id:"revert-setup",level:2}];function u(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components},{Details:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"77-service-automation",children:"7.7 Service Automation"})}),"\n",(0,t.jsxs)(n.p,{children:["By default, blockchain clients are not automatically starting whenever there has been a power outage or crash on your node system. This means additional manual work by logging into the node and restarting clients or services. As the ",(0,t.jsx)(n.a,{href:"https://github.com/lukso-network/tools-lukso-cli",children:"LUKSO CLI"})," manages all blockchain clients in the background, we can add a startup script to run every time on boot."]}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["Automatically restarting individual execution, consensus, or validator clients after failure requires a \ud83d\udc33 ",(0,t.jsx)(n.a,{href:"/docs/theory/node-operation/client-setups",children:"Docker"})," or \ud83d\uddc2\ufe0f ",(0,t.jsx)(n.a,{href:"/docs/theory/node-operation/client-setups",children:"Custom Setup"}),". However, ",(0,t.jsx)(n.a,{href:"/docs/guides/alert-systems/grafana-notifications",children:(0,t.jsx)(n.strong,{children:"Grafana Notifications"})})," will inform you when specific processes stopped working."]})}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:["Automation is only possible from ",(0,t.jsx)(n.a,{href:"https://github.com/lukso-network/tools-lukso-cli",children:"LUKSO CLI"})," ",(0,t.jsx)(n.em,{children:"Version 0.8.1"})," onwards. Make sure to ",(0,t.jsx)(n.a,{href:"http://localhost:3000/docs/guides/maintenance/client-updates",children:"update to the latest version"}),"."]})}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["The following steps are performed on your \ud83d\udcdf ",(0,t.jsx)(n.strong,{children:"node server"}),"."]})}),"\n",(0,t.jsx)(n.h2,{id:"1-stop-node-operation",children:"1. Stop Node Operation"}),"\n",(0,t.jsx)(n.p,{children:"Depending on your setup method, there are different ways to stop your node before applying updates."}),"\n",(0,t.jsxs)(o.A,{groupId:"setup",children:[(0,t.jsxs)(l.A,{value:"cli",label:"LUKSO CLI",default:!0,children:[(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"cd <lukso-working-directory>\nlukso stop\n"})}),(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["Exchange ",(0,t.jsx)(n.code,{children:"<lukso-working-directory>"})," with the path of the node folder."]})})]}),(0,t.jsx)(l.A,{value:"automation",label:"Service Automation",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"sudo systemctl stop lukso-validator\n"})})})]}),"\n",(0,t.jsxs)(s,{children:[(0,t.jsx)("summary",{children:"Force Client Shutdown"}),(0,t.jsxs)(o.A,{children:[(0,t.jsx)(l.A,{value:"geth",label:"Geth",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"sudo pkill geth\n"})})}),(0,t.jsx)(l.A,{value:"erigon",label:"Erigon",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"sudo pkill erigon\n"})})}),(0,t.jsx)(l.A,{value:"nethermind",label:"Nethermind",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"sudo pkill nethermind\n"})})}),(0,t.jsx)(l.A,{value:"besu",label:"Besu",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"sudo pkill besu\n"})})}),(0,t.jsx)(l.A,{value:"teku",label:"Teku",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"sudo pkill teku\n"})})}),(0,t.jsx)(l.A,{value:"nimbus2",label:"Nimbus-Eth2",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"sudo pkill nimbus_beacon_node\nsudo pkill nimbus_validator_client\n"})})}),(0,t.jsxs)(l.A,{value:"lighthouse",label:"Lighthouse",children:[(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"sudo pkill lighthouse\n"})}),(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"The Lighthouse client uses a single binary for both the consensus and validator processes."})})]}),(0,t.jsx)(l.A,{value:"prysm",label:"Prysm",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"sudo pkill prysm\nsudo pkill validator\n"})})})]})]}),"\n",(0,t.jsx)(n.h2,{id:"2-create-system-user",children:"2. Create System User"}),"\n",(0,t.jsxs)(n.p,{children:["As the staking node requests the validator wallet's password every time during startup, we have to write the password into a file, similar to how credentials are handled within the ",(0,t.jsx)(n.a,{href:"/docs/guides/modifications/dynamic-dns",children:"Dynamic DNS"})," setup. To mitigate security risks, a separate user will be added to exclusively run the node service and read the password file."]}),"\n",(0,t.jsx)(n.p,{children:"Running services as a system user with minimal privileges is a typical best practice, as the service is not allowed to write outside of the specific client folders. It limits the potential damage if the software is somehow compromised, and hides the private credentials for the rest of the system. The node's user won't be able to write to directorieson the system or execute commands. Use the system's user creation tool to add a new one."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"sudo adduser --system lukso-validator-worker --group --no-create-home\n"})}),"\n",(0,t.jsxs)(s,{children:[(0,t.jsx)("summary",{children:"Full Command Explanation"}),(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Flag"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsxs)("nobr",{children:[" ",(0,t.jsx)(n.code,{children:"--system"})," "]})}),(0,t.jsx)(n.td,{children:"Creates a system user, used to run services and daemons rather than for people to log in with."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsxs)("nobr",{children:[" ",(0,t.jsx)(n.code,{children:"--group"})," "]})}),(0,t.jsx)(n.td,{children:"Creates a new group with the same name as the user."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsxs)("nobr",{children:[" ",(0,t.jsx)(n.code,{children:"--no-create-home"})," "]})}),(0,t.jsx)(n.td,{children:"Prevents the creation of a home directory, as the user is only meant to run a specific service."})]})]})]})]}),"\n",(0,t.jsxs)(n.p,{children:["If you want to confirm that the user has been created, you can search for it within the password file, housing all essential information for each user account. Using the search tool ",(0,t.jsx)(n.em,{children:"grep"}),", we can check if the user exists within the file."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'grep "lukso-validator-worker" /etc/passwd\n'})}),"\n",(0,t.jsx)(n.p,{children:"The output should look similar to this:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"lukso-validator-worker:x:120:126::/home/lukso-validator-worker:/usr/sbin/nologin\n"})}),"\n",(0,t.jsx)(n.h2,{id:"3-add-password-file",children:"3. Add Password File"}),"\n",(0,t.jsx)(n.p,{children:"If you run a validator node, you will need to create two new files: one for the password and one for the service automation. Start by creating a new directory for these service files directly within your node folder, where the new system user will have access to."}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"This step can be skipped for regular nodes that do not run validators."})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"# Move to Home Directory\ncd\n\n# Open Node Folder\ncd <lukso-working-directory>\n\n# Create Service Folder\nmkdir static\n\n# Move into Folder\ncd static\n"})}),"\n",(0,t.jsx)(n.p,{children:"Continue to add a password file using your preferred text editor, write down your password on a single line, then save and exit."}),"\n",(0,t.jsxs)(o.A,{groupId:"editor",children:[(0,t.jsx)(l.A,{value:"vim",label:"Vim",default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"# Create Password File\nvim ./<your-filename>\n\n# Example Name\nvim ./client_dependencies\n"})})}),(0,t.jsx)(l.A,{value:"nano",label:"Nano",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"# Create Password File\nnano ./<your-filename>\n\n# Example Name\nnano ./client_dependencies\n"})})})]}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["Exchange ",(0,t.jsx)(n.code,{children:"<your-filename>"})," with a generic name, so even with access, users dont immediately know there is's a password."]})}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["Access to this password file will be restricted within the ",(0,t.jsx)(n.a,{href:"#5-restrict-access-rights",children:"Configure Access Rights"})," section."]})}),"\n",(0,t.jsx)(n.h2,{id:"4-add-startup-script",children:"4. Add Startup Script"}),"\n",(0,t.jsx)(n.p,{children:"After creating the password file, you can create the second service automation file, starting up the LUKSO CLI with your preferred settings and checking the network connection before doing so. Verifying that the internet connection is up before the clients are started is essential to avoid stalls or manual interventions."}),"\n",(0,t.jsx)(n.p,{children:"If there was a power outage, the node might resume work before the router was restarted or could even connect to the internet service provider. Instead, the startup script can try to ping a public Google service first and resume work once the request was fulfilled. Otherwise, the script will wait retry. Start by creating the startup file using your preferred text editor."}),"\n",(0,t.jsxs)(o.A,{groupId:"editor",children:[(0,t.jsx)(l.A,{value:"vim",label:"Vim",default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"vim ./lukso_startup.sh\n"})})}),(0,t.jsx)(l.A,{value:"nano",label:"Nano",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"nano ./lukso_startup.sh\n"})})})]}),"\n",(0,t.jsx)(n.p,{children:"Then continue to write down or paste the startup schedule:"}),"\n",(0,t.jsxs)(o.A,{groupId:"network-type",children:[(0,t.jsx)(l.A,{value:"mainnet-node",label:"Mainnet Node",default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'#!/bin/bash\n# Try to ping Google Server\nwhile ! ping -c1 google.com &>/dev/null\ndo\n    echo "Internet down. Google could not be pinged, retrying in 5 seconds."\n    sleep 5\ndone\necho "Internet up. Starting the LUKSO Mainnet Node."\n# If internet is up, continue with next command\nexec /usr/local/bin/lukso start \\\n        --checkpoint-sync\n'})})}),(0,t.jsx)(l.A,{value:"testnet-node",label:"Testnet Node",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'#!/bin/bash\n# Try to ping Google Server\nwhile ! ping -c1 google.com &>/dev/null\ndo\n    echo "Internet down. Google could not be pinged, retrying in 5 seconds."\n    sleep 5\ndone\necho "Internet up. Starting the LUKSO Testnet Node."\n# If internet is up, continue with next command\nexec /usr/local/bin/lukso start \\\n        --testnet \\\n        --checkpoint-sync\n'})})}),(0,t.jsxs)(l.A,{value:"mainnet-validator",label:"Mainnet Validator",default:!0,children:[(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'#!/bin/bash\n# Try to ping Google Server\nwhile ! ping -c1 google.com &>/dev/null\ndo\n    echo "Internet down. Google could not be pinged, retrying in 5 seconds."\n    sleep 5\ndone\necho "Internet up. Starting the LUKSO Mainnet Validator."\n# If internet is up, continue with next command\nexec /usr/local/bin/lukso start \\\n        --validator \\\n        --validator-wallet-password ./static/<your-generic-password-file> \\\n        --transaction-fee-recipient "<your-fee-recipient-address>" \\\n        --checkpoint-sync\n'})}),(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsx)(n.p,{children:"Exchange the following properties:"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"<your-generic-password-file>"})," with the name of your password file"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"<your-fee-recipient-address>"})," with your wallet address to receive validator income."]}),"\n"]})]})]}),(0,t.jsxs)(l.A,{value:"testnet-validator",label:"Testnet Validator",children:[(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'#!/bin/bash\n# Try to ping Google Server\nwhile ! ping -c1 google.com &>/dev/null\ndo\n    echo "Internet down. Google could not be pinged, retrying in 5 seconds."\n    sleep 5\ndone\necho "Internet up. Starting the LUKSO Testnet Validator."\n# If internet is up, continue with next command\nexec /usr/local/bin/lukso start \\\n        --testnet \\\n        --validator \\\n        --validator-wallet-password ./static/<your-generic-password-file> \\\n        --transaction-fee-recipient "<your-fee-recipient-address>" \\\n        --checkpoint-sync\n'})}),(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsx)(n.p,{children:"Exchange the following properties:"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"<your-generic-password-file>"})," with the name of your password file"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"<your-fee-recipient-address>"})," with your wallet address to receive validator income."]}),"\n"]})]})]})]}),"\n",(0,t.jsxs)(s,{children:[(0,t.jsx)("summary",{children:"Full Command Explanation"}),(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsxs)("nobr",{children:[" ",(0,t.jsx)(n.code,{children:"c1"})," "]})}),(0,t.jsx)(n.td,{children:"Specifies to send a single package before stopping."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsxs)("nobr",{children:[" ",(0,t.jsx)(n.code,{children:"&>/dev/null"})," "]})}),(0,t.jsx)(n.td,{children:"Discard the output of the ping, as its not needed."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsxs)("nobr",{children:[" ",(0,t.jsx)(n.code,{children:"testnet"})," "]})}),(0,t.jsx)(n.td,{children:"Runs the node on the testnet instead of the mainnet."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsxs)("nobr",{children:[" ",(0,t.jsx)(n.code,{children:"validator"})," "]})}),(0,t.jsx)(n.td,{children:"Runs the node with validator keys to participate in staking."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsxs)("nobr",{children:[" ",(0,t.jsx)(n.code,{children:"validator-wallet-password"})," "]})}),(0,t.jsx)(n.td,{children:"Dymanic path to the password file based on the script's location."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsxs)("nobr",{children:[" ",(0,t.jsx)(n.code,{children:"transaction-fee-recipient"})," "]})}),(0,t.jsx)(n.td,{children:"Attaches the wallet address that will receive staking rewards."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsxs)("nobr",{children:[" ",(0,t.jsx)(n.code,{children:"checkpoint-sync"})," "]})}),(0,t.jsx)(n.td,{children:"Speeds up synchronization by lazy-loading full blockchain data."})]})]})]})]}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["Additional flags can be attached to further customize your node, like ",(0,t.jsx)(n.a,{href:"/docs/guides/modifications/slasher-configuration",children:"configuring the slasher service"}),", ",(0,t.jsx)(n.a,{href:"/docs/guides/modifications/custom-node-name",children:"specifying a node name"}),", or ",(0,t.jsx)(n.a,{href:"/docs/guides/modifications/validator-graffiti",children:"setting a validator graffiti"}),". The startup script will automatically read all the client configuration files within the node folder. However, keep in mind that you will always have to add another backslash ",(0,t.jsx)(n.code,{children:"\\"})," if you attach several flags across multiple lines."]})}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:["In case you are modifying the startup script, make sure to ",(0,t.jsx)(n.a,{href:"#5-restrict-access-rights",children:"restrict permissions"})," as regular user wont have access to it."]})}),"\n",(0,t.jsx)(n.h2,{id:"5-restrict-access-rights",children:"5. Restrict Access Rights"}),"\n",(0,t.jsx)(n.p,{children:"To protect sensitive credentials and ensure system security, we need to restrict file access. Additional permission management prevents unauthorized access to the password file and startup script to ensure only the dedicated user can start the node."}),"\n",(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsx)(n.p,{children:"Within the commands, exchange the following properties:"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"<user-name>"})," with the name of the user you're logging into the node."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"<lukso-working-directory>"})," with the name of your node folder"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"<your-generic-password-file>"})," with the name of your password file"]}),"\n"]})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"5.1 Change Node Folder Owner"}),": Set the new ",(0,t.jsx)(n.em,{children:"lukso-validator-worker"})," as owner of all node directory files and configs."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"sudo chown -R lukso-validator-worker:lukso-validator-worker /home/<user-name>/<lukso-working-directory>\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"5.2 Change LUKSO CLI Owner"}),": Set the new ",(0,t.jsx)(n.em,{children:"lukso-validator-worker"})," as owner of the LUKSO CLI and binaries."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"sudo chown lukso-validator-worker:lukso-validator-worker /usr/local/bin/lukso\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"5.3 Grant Node Folder Access"}),": Ensure the regular user still has permission to access logs and the working directory."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"sudo chmod -R 750 /home/<user-name>/<lukso-working-directory>\nsudo chmod 755 /home/<user-name>/<lukso-working-directory>\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"5.4 Restrict Password File"}),": Ensure that only the ",(0,t.jsx)(n.em,{children:"lukso-validator-worker"})," can read the password to start the node."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"sudo chmod 400 /home/<user-name>/<lukso-working-directory>/static/<your-generic-password-file>\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"5.5 Restrict Startup Script"}),": Ensure that only the ",(0,t.jsx)(n.em,{children:"lukso-validator-worker"})," can start up the node."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"sudo chmod 500 /home/<user-name>/<lukso-working-directory>/static/lukso_startup.sh\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"5.6 Check User Access"}),": Ensure that the ",(0,t.jsx)(n.em,{children:"lukso-validator-worker"})," can access the full path to the node directory."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"namei -l /home/<user-name>/<lukso-working-directory>\n"})}),"\n",(0,t.jsx)(n.p,{children:"The output should look like the following:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"f: /home/<user-name>/<lukso-working-directory>\ndrwxr-xr-x root                    root                    /\ndrwxr-xr-x root                    root                    home\ndrwxr-x--- <user-name>             <user-name>             <user-name>\ndrwxr-xr-x lukso-validator-worker  lukso-validator-worker  <lukso-working-directory>\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:["By looking at the first column, you need to verify that users can read and access ",(0,t.jsx)(n.code,{children:"r-x"})," all parent folders of the node folder. Without access ",(0,t.jsx)(n.code,{children:"---"})," to intermediate directories, they cant access any of the underlying folders they became the owner of."]})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"5.7 Check User Access"}),": Grant access to the ",(0,t.jsx)(n.em,{children:"user"})," directory and verify ",(0,t.jsx)(n.em,{children:"lukso-validator-worker"})," can access the node folder."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"sudo chmod 755 /home/<user-name>\nnamei -l /home/<user-name>/<lukso-working-directory>\n"})}),"\n",(0,t.jsx)(n.p,{children:"The output should look like the following:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"f: /home/<user-name>/<lukso-working-directory>\ndrwxr-xr-x root                    root                    /\ndrwxr-xr-x root                    root                    home\ndrwxr-xr-x <user-name>             <user-name>             <user-name>\ndrwxr-xr-x lukso-validator-worker  lukso-validator-worker  <lukso-working-directory>\n"})}),"\n",(0,t.jsx)(n.h2,{id:"6-configure-service-file",children:"6. Configure Service File"}),"\n",(0,t.jsx)(n.p,{children:"After the user, files, and permissions are in place, you can configure the actual system service that is going to execute our startup script once the system boots. Create a new service file in the system's directory using your preferred text editor."}),"\n",(0,t.jsxs)(o.A,{groupId:"editor",children:[(0,t.jsx)(l.A,{value:"vim",label:"Vim",default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"sudo vim /etc/systemd/system/lukso-validator.service\n"})})}),(0,t.jsx)(l.A,{value:"nano",label:"Nano",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"sudo nano /etc/systemd/system/lukso-validator.service\n"})})})]}),"\n",(0,t.jsx)(n.p,{children:"Then continue to write down or paste the service properties and descriptions for your preferred logging tool."}),"\n",(0,t.jsxs)(o.A,{groupId:"logging-tool",children:[(0,t.jsx)(l.A,{value:"journal",label:"Journal Logging",default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"[Unit]\nDescription=LUKSO Validator Service\nDocumentation=https://github.com/lukso-network/tools-lukso-cli\nWants=network-online.target\nAfter=network-online.target\n\n[Service]\nUser=lukso-validator-worker\nGroup=lukso-validator-worker\nType=oneshot\nRemainAfterExit=yes\nWorkingDirectory=/home/<user-name>/<lukso-working-directory>\nExecStart=/home/<user-name>/<lukso-working-directory>/static/lukso_startup.sh\nExecStop=/usr/local/bin/lukso stop\nSyslogIdentifier=lukso-validator\nStandardOutput=journal\nStandardError=journal\n\n[Install]\nWantedBy=multi-user.target\n"})})}),(0,t.jsx)(l.A,{value:"system",label:"System Logging",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"[Unit]\nDescription=LUKSO Validator Service\nDocumentation=https://github.com/lukso-network/tools-lukso-cli\nWants=network-online.target\nAfter=network-online.target\n\n[Service]\nUser=lukso-validator-worker\nGroup=lukso-validator-worker\nType=oneshot\nRemainAfterExit=yes\nWorkingDirectory=/home/<user-name>/<lukso-working-directory>\nExecStart=/home/<user-name>/<lukso-working-directory>/static/lukso_startup.sh\nExecStop=/usr/local/bin/lukso stop\nSyslogIdentifier=lukso-validator\nStandardOutput=syslog\nStandardError=syslog\n\n[Install]\nWantedBy=multi-user.target\n"})})})]}),"\n",(0,t.jsxs)(s,{children:[(0,t.jsx)("summary",{children:"Full Property Explanation"}),(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Property"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"Description"})}),(0,t.jsxs)(n.td,{children:["A human-readable label for the service, shown in ",(0,t.jsx)(n.code,{children:"systemctl status"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"Documentation"})}),(0,t.jsx)(n.td,{children:"URL to relevant documentation for setup or troubleshooting."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"Wants"})}),(0,t.jsxs)(n.td,{children:["The service should try to start ",(0,t.jsx)(n.code,{children:"network-online.target"})," before starting the validator service."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"After"})}),(0,t.jsxs)(n.td,{children:["Ensures the service starts only after the network is online via ",(0,t.jsx)(n.code,{children:"network-online.target"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"User"})}),(0,t.jsxs)(n.td,{children:["Executes the service as the ",(0,t.jsx)(n.code,{children:"lukso-validator-worker"})," user."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"Group"})}),(0,t.jsxs)(n.td,{children:["Executes the service under the ",(0,t.jsx)(n.code,{children:"lukso-validator-worker"})," group."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"Type"})}),(0,t.jsxs)(n.td,{children:["Set to ",(0,t.jsx)(n.code,{children:"oneshot"}),", meaning the command runs once and considers the service to be started."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"RemainAfterExit"})}),(0,t.jsx)(n.td,{children:"Keeps the service in an active state, even when exited, to save logs for long-running processes."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"WorkingDirectory"})}),(0,t.jsxs)(n.td,{children:["Defines that the service command will be executed in the ",(0,t.jsx)(n.code,{children:"<lukso-working-directory>"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"ExecStart"})}),(0,t.jsxs)(n.td,{children:["The ",(0,t.jsx)(n.code,{children:"lukso_startup.sh"})," script that will be started from the service."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"ExecStop"})}),(0,t.jsxs)(n.td,{children:["Command to stop the validator service using ",(0,t.jsx)(n.code,{children:"lukso stop"})," once clients are up and running."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"SyslogIdentifier"})}),(0,t.jsxs)(n.td,{children:["Tags logs from the service with ",(0,t.jsx)(n.code,{children:"lukso-validator"})," to help distinguish them from other logs."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"StandardOutput"})}),(0,t.jsx)(n.td,{children:"Sends regular service logs to the journal or syslog system."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"StandardError"})}),(0,t.jsx)(n.td,{children:"Sends error service logs to the journal or syslog system."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"WantedBy"})}),(0,t.jsxs)(n.td,{children:["Binds the service to the ",(0,t.jsx)(n.code,{children:"multi-user.target"}),", so it starts during all boot processes."]})]})]})]})]}),"\n",(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsx)(n.p,{children:"Exchange the following properties:"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"<user-name>"})," with the name of the user you're logging into the node."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"<lukso-working-directory>"})," with the name of your node folder"]}),"\n"]})]}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsx)(n.p,{children:"Ensure there are no missing or unintended spaces, characters or linebreaks before saving the service configuration."})}),"\n",(0,t.jsx)(n.admonition,{type:"danger",children:(0,t.jsxs)(n.p,{children:["In case you set different ",(0,t.jsx)(n.code,{children:"User"})," and ",(0,t.jsx)(n.code,{children:"Group"})," names, ensure that they are spelled correctly within the service file. If the exact user name cant be found, system services will fall back to use the ",(0,t.jsx)(n.code,{children:"root"})," permissions, creating security risks."]})}),"\n",(0,t.jsx)(n.p,{children:"After you saved and exited the service file, you will need to update the system manager configuration, ensuring that all file changes are included within the current system setup. Use the system control command to reload them."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"sudo systemctl daemon-reload\n"})}),"\n",(0,t.jsx)(n.h2,{id:"7-restart-the-node",children:"7. Restart the Node"}),"\n",(0,t.jsx)(n.p,{children:"After setting up the service and configuring file access, you can enable and start the systemd service."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"7.1 Enable Start Boot"}),": Enable autostarts of the node process during system boot."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"sudo systemctl enable lukso-validator\n"})}),"\n",(0,t.jsx)(n.p,{children:"The output should look similar to this:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"Created symlink /etc/systemd/system/multi-user.target.wants/validator-validator.service \u2192 /etc/systemd/system/lukso-validator.service.\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"7.2 Startup Service"}),": Once enabled, you can start the automated node startup using the system control command:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"sudo systemctl start lukso-validator\n"})}),"\n",(0,t.jsx)(n.h2,{id:"8-check-service-status",children:"8. Check Service Status"}),"\n",(0,t.jsx)(n.p,{children:"You can fetch the current status from the system control to check if the node service is running and configured correctly. The command will display whether it is active, enabled, or disabled and show recent log entries."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"sudo systemctl status lukso-validator\n"})}),"\n",(0,t.jsx)(n.p,{children:"The output should look similar to this:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:'\u25cf validator.service - LUKSO Validator Node\n     Loaded: loaded (/etc/systemd/system/validator.service; enabled; vendor preset: enabled)\n     Active: active (exited) since [DATE] UTC; [TIME] ago\n       Docs: https://github.com/lukso-network/tools-lukso-cli\n   Main PID: 9096 (code=exited, status=0/SUCCESS)\n      Tasks: 26 (limit: 4694)\n     Memory: 1.1G\n     CGroup: /system.slice/validator.service\n             [PID] geth --config=./configs/testnet/geth/geth.toml\n             \u251c\u2500[PID] prysm --log-file=./testnet-logs/prysm_2025-06-06_14-43-01.log --accept-terms-of-use --config-file=./configs/testn>\n             \u2514\u2500[PID] validator --accept-terms-of-use --config-file=./configs/testnet/prysm/validator.yaml --log-file=./testnet-logs/va>\n\n[DATE] [TIME] [USER] validator[9096]: time="2025-06-06T14:43:13Z" level=info msg="\u2705  Validator started! Use \'luk>\n[DATE] [TIME] [USER] validator[9096]: time="2025-06-06T14:43:13Z" level=info msg="\ud83c\udf89  Clients have been started. >\n...\n[DATE] [TIME] [USER] systemd[1]: Finished LUKSO Validator Node.\n'})}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["You can still check the status of the node using the ",(0,t.jsx)(n.a,{href:"https://github.com/lukso-network/tools-lukso-cli",children:"LUKSO CLI"}),", however, you always have to use the superuser permission.\nAs you have a separate user to run the service, only ",(0,t.jsx)(n.em,{children:"root"})," or ",(0,t.jsx)(n.em,{children:"lukso-validator-worker"})," are permitted to fetch the service information like ",(0,t.jsx)(n.code,{children:"lukso status"})," or ",(0,t.jsx)(n.code,{children:"lukso logs"}),". By default, the CLI will always show the processes as stopped, even if they are running."]})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"# Move to Home Directory\ncd\n\n# Enter Node Folder\ncd <lukso-working-directory>\n\n# Check Processes\nsudo lukso status\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["Exchange ",(0,t.jsx)(n.code,{children:"<lukso-working-directory>"})," with the path of the node folder."]})}),"\n",(0,t.jsx)(n.p,{children:"Depending on the clients you use, output should look similar to this:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"INFO[0000] PID 9409 - Execution ([EXECUTION_CLIENT_NAME]): Running \ud83d\udfe2\nINFO[0000] PID 9419 - Consensus ([CONSENSUS_CLIENT_NAME]): Running \ud83d\udfe2\nINFO[0000] PID 9426 - Validator ([VALIDATOR_CLIENT_NAME]): Running \ud83d\udfe2\n"})}),"\n",(0,t.jsx)(n.h2,{id:"maintenance",children:"Maintenance"}),"\n",(0,t.jsx)(n.p,{children:"Proper maintenance ensures that all the components are working as intended and can be updated on the fly."}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:["The service starts the ",(0,t.jsx)(n.a,{href:"https://github.com/lukso-network/tools-lukso-cli",children:"LUKSO CLI"})," as if its directly run within your node folder, just by a specific user with limited permissions and the exclusive right to view the validator password. All CLI commands can be executed as before using root permissions, however, never execute ",(0,t.jsx)(n.code,{children:"sudo lukso start"}),", as it will restart the clients with full root privilages, entailing security risks."]})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Logging"}),": Check the latest status of the system service."]}),"\n",(0,t.jsxs)(o.A,{groupId:"logging-tool",children:[(0,t.jsx)(l.A,{value:"journal",label:"Journal Logging",default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"sudo journalctl -f -u lukso-validator\n"})})}),(0,t.jsx)(l.A,{value:"system",label:"System Logging",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"sudo tail -f /var/log/syslog | grep lukso-validator\n"})})})]}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["Further details about checking client logs files can be found on the ",(0,t.jsx)(n.a,{href:"/docs/guides/maintenance/problem-scanning",children:(0,t.jsx)(n.strong,{children:"Problem Scanning"})})," page."]})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Starting"}),": If you made any changes or updates to configuration, reload the system daemon and start the node."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"sudo systemctl daemon-reload\nsudo systemctl restart lukso-validator\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Stopping"}),": You can stop all the node clients and parent processes using the system control."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"sudo systemctl stop lukso-validator\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["Further information about system control or logging can be found on the ",(0,t.jsx)(n.a,{href:"/docs/theory/node-operation/utility-tools",children:(0,t.jsx)(n.strong,{children:"Utility Tools"})})," page in the \ud83e\udde0 ",(0,t.jsx)(n.a,{href:"/docs/theory/preparations/node-specifications",children:(0,t.jsx)(n.strong,{children:"Theory"})})," section."]})}),"\n",(0,t.jsx)(n.h2,{id:"revert-setup",children:"Revert Setup"}),"\n",(0,t.jsx)(n.p,{children:"If something went wrong, you can remove the user or delete the service and related files all together."}),"\n",(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsx)(n.p,{children:"Within the commands, exchange the following properties:"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"<user-name>"})," with the name of the user you're logging into the node."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"<lukso-working-directory>"})," with the name of your node folder"]}),"\n"]})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"1. Stop the Node Service"}),": First, stop the blockchain clients using the configured service."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"sudo systemctl stop lukso-validator\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"2. Change Folder Ownership"}),": Change the owner of the node folder back to your regular node user."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"sudo chown -R <user-name>:<user-name> /home/<user-name>/<your-working-directory>\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"3. Change LUKSO CLI Ownership"}),": Revert the ownership of the LUKSO CLI back to as it was before."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"sudo chown root:root /usr/local/bin/lukso\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"4. Restrict User Directory"}),": Set exclusively access to your user's home directory again."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"sudo chmod 750 /home/<user-name>\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"5. Remove System User"}),": Remove the ",(0,t.jsx)(n.em,{children:"lukso-validator-worker"})," user, group, and files, so there is no orphaned data."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"sudo deluser --remove-all-files lukso-validator-worker\nsudo delgroup lukso-validator-worker\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"6. Disable Node Service"}),": Remove the service link from the system's boot."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"sudo systemctl disable lukso-validator\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"7. Remove Service File"}),": Delete the service configuration file from the system folder."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"sudo rm /etc/systemd/system/lukso-validator.service\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"8. Reload System Service"}),": Reload the system daemon to apply latest service updates."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"sudo systemctl daemon-reload\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"9. Remove Startup Files"}),": Delete the password file and startup script within the node folder."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"rm -rf <lukso-working-directory>/static\n"})})]})}function x(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>l});var r=s(6540);const t={},i=r.createContext(t);function o(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(i.Provider,{value:n},e.children)}},9365:(e,n,s)=>{s.d(n,{A:()=>o});s(6540);var r=s(4164);const t={tabItem:"tabItem_Ymn6"};var i=s(4848);function o({children:e,hidden:n,className:s}){return(0,i.jsx)("div",{role:"tabpanel",className:(0,r.A)(t.tabItem,s),hidden:n,children:e})}}}]);