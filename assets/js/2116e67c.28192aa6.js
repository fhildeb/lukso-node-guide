"use strict";(self.webpackChunklukso_node_guide=self.webpackChunklukso_node_guide||[]).push([[6274],{402:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>p,frontMatter:()=>l,metadata:()=>r,toc:()=>h});const r=JSON.parse('{"id":"guides/client-setup/validator-configuration","title":"6.4 Validator Configuration","description":"Learn how to configure validator keys and enable staking on your LUKSO node using the LUKSO CLI, including secure key import, startup commands, and reward address setup.","source":"@site/docs/guides/client-setup/validator-configuration.md","sourceDirName":"guides/client-setup","slug":"/guides/client-setup/validator-configuration","permalink":"/docs/guides/client-setup/validator-configuration","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_label":"6.4 Validator Configuration","sidebar_position":4,"description":"Learn how to configure validator keys and enable staking on your LUKSO node using the LUKSO CLI, including secure key import, startup commands, and reward address setup."},"sidebar":"guidesSidebar","previous":{"title":"6.3 LUKSO CLI Installation","permalink":"/docs/guides/client-setup/lukso-cli-installation"},"next":{"title":"7.1 Slasher Configuration","permalink":"/docs/guides/modifications/slasher-configuration"}}');var s=n(4848),o=n(8453),i=n(1470),a=n(9365);const l={sidebar_label:"6.4 Validator Configuration",sidebar_position:4,description:"Learn how to configure validator keys and enable staking on your LUKSO node using the LUKSO CLI, including secure key import, startup commands, and reward address setup."},d="6.4 Validator Configuration",c={},h=[{value:"1. Transfer Validator Keys",id:"1-transfer-validator-keys",level:2},{value:"2. Import Validator Keys",id:"2-import-validator-keys",level:2},{value:"3. Verify Imported Accounts",id:"3-verify-imported-accounts",level:2},{value:"4. Remove the Key Folder",id:"4-remove-the-key-folder",level:2},{value:"5. Start the Validator",id:"5-start-the-validator",level:2}];function u(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"64-validator-configuration",children:"6.4 Validator Configuration"})}),"\n",(0,s.jsxs)(t.p,{children:["After your ",(0,s.jsx)(t.a,{href:"/docs/guides/client-setup/lukso-cli-installation",children:"node setup"})," is working as intended, you can activate its staking functionality by importing your validator keys. Running a validator node means you're actively participating in the blockchain's consensus on top of providing a synchronized data peer of the network. The ",(0,s.jsx)(t.a,{href:"https://github.com/lukso-network/tools-lukso-cli",children:"LUKSO CLI"})," provides unified commands to manage staking for mainnet and testnet and various clients."]}),"\n",(0,s.jsx)(t.admonition,{type:"tip",children:(0,s.jsxs)(t.p,{children:["Please ensure you have a basic understanding of blockchain networks and staking before running a validator node. If you're not yet familiar with ",(0,s.jsx)(t.a,{href:"/docs/theory/blockchain-knowledge/proof-of-stake",children:(0,s.jsx)(t.strong,{children:"Proof of Stake"})}),", ",(0,s.jsx)(t.a,{href:"/docs/theory/blockchain-knowledge/tokenomics",children:(0,s.jsx)(t.strong,{children:"Tokenomics"})}),", ",(0,s.jsx)(t.a,{href:"/docs/theory/blockchain-knowledge/slashing-and-panelties",children:(0,s.jsx)(t.strong,{children:"Slashing and Panelties"})}),", ",(0,s.jsx)(t.a,{href:"/docs/theory/node-operation/validator-credentials",children:(0,s.jsx)(t.strong,{children:"Validator Credentials"})})," and ",(0,s.jsx)(t.a,{href:"/docs/theory/blockchain-knowledge/client-providers",children:(0,s.jsx)(t.strong,{children:"Client Providers"})}),", please refer to the \ud83e\udde0 ",(0,s.jsx)(t.a,{href:"/docs/theory/blockchain-knowledge/proof-of-stake",children:(0,s.jsx)(t.strong,{children:"Theory"})})," section."]})}),"\n",(0,s.jsx)(t.admonition,{type:"warning",children:(0,s.jsxs)(t.p,{children:["Depending on if you are participating in the mainnet or testnet, running a validator requires 32 LYX or 32 LYXt per validator key. Ensure you have completed the ",(0,s.jsx)(t.a,{href:"/docs/guides/validator-setup/wagyu-key-generation",children:(0,s.jsx)(t.strong,{children:"Key Generation"})})," and ",(0,s.jsx)(t.a,{href:"/docs/guides/validator-setup/launchpad-walkthrough",children:(0,s.jsx)(t.strong,{children:"Deposit Process"})})," before importing keys."]})}),"\n",(0,s.jsx)(t.h2,{id:"1-transfer-validator-keys",children:"1. Transfer Validator Keys"}),"\n",(0,s.jsxs)(t.p,{children:["Once you've completed the ",(0,s.jsx)(t.a,{href:"/docs/guides/validator-setup/precautions",children:"validator setup"}),", you will be left with one or multiple folders containing the encrypted validator key files, depending on if you split the deposits or withdrawals to multiple wallets. These deposit files will first have to be sent from your personal computer to your node, before they can be imported into the consensus client."]}),"\n",(0,s.jsx)(t.admonition,{title:"SCP",type:"tip",children:(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Secure_copy_protocol",children:"Secure Copy Protocol"})," is used for secure file transfers between hosts on a network. It operates over SSH, leveraging its authentication and encryption mechanisms to ensure both the authenticity and confidentiality of the data during transfer. SCP is a reliable choice for data transfers, offering secure transmission even over unsecured networks."]})}),"\n",(0,s.jsx)(t.p,{children:"Build and execute the entire command. You will be prompted to log in again before the process is started."}),"\n",(0,s.jsx)(t.admonition,{type:"info",children:(0,s.jsxs)(t.p,{children:["The following steps are performed on your \ud83d\udcbb ",(0,s.jsx)(t.strong,{children:"personal computer"}),"."]})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sh",children:"scp -P <ssh-port> -i ~/.ssh/<ssh-key> -r <key-folder> <user-name>@<node-ip>:<lukso-working-directory>/<keyfolder>\n"})}),"\n",(0,s.jsx)(t.admonition,{type:"warning",children:(0,s.jsx)(t.p,{children:"The command uses quite a few properties and flags. Replace all properties with specific values of your SSH and node configuration. Opening up a text editor before copying the contents into the terminal is recommended."})}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:(0,s.jsx)(t.strong,{children:"Property"})}),(0,s.jsx)(t.th,{children:(0,s.jsx)(t.strong,{children:"Description"})}),(0,s.jsx)(t.th,{children:(0,s.jsx)(t.strong,{children:"Retrieval"})})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)("nobr",{children:(0,s.jsx)(t.code,{children:"<ssh-key>"})})}),(0,s.jsx)(t.td,{children:"SSH key file used for authentication."}),(0,s.jsxs)(t.td,{children:["Run ",(0,s.jsx)(t.code,{children:"ls ~/.ssh/"})," in your personal computer's terminal to list the files in the SSH folder and find the correct key file name for your node login."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)("nobr",{children:(0,s.jsx)(t.code,{children:"<key-folder>"})})}),(0,s.jsx)(t.td,{children:"Local path to the keystore folder with validator keys."}),(0,s.jsx)(t.td,{children:"Use your file explorer to locate the folder of your validator keys on your personal computer and right-click the folder and copy it's path."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsxs)("nobr",{children:[(0,s.jsx)(t.code,{children:"<ssh-port>"})," "]})}),(0,s.jsx)(t.td,{children:"The SSH port of your node."}),(0,s.jsxs)(t.td,{children:["Open the ",(0,s.jsx)(t.code,{children:"~/.ssh/config"})," file using your preferred text editor on your personal computer and find the port that is used for the node's SSH communication."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)("nobr",{children:(0,s.jsx)(t.code,{children:"<user-name>"})})}),(0,s.jsx)(t.td,{children:"The SSH user for your node."}),(0,s.jsxs)(t.td,{children:["Open the ",(0,s.jsx)(t.code,{children:"~/.ssh/config"})," file using your preferred text editor on your personal computer and find the admin user name for your node."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsxs)("nobr",{children:[(0,s.jsx)(t.code,{children:"<node-ip>"})," "]})}),(0,s.jsx)(t.td,{children:"The IP address of your node."}),(0,s.jsxs)(t.td,{children:["Open the ",(0,s.jsx)(t.code,{children:"~/.ssh/config"})," file using your preferred text editor on your personal computer and find the host IP address of your node."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsxs)("nobr",{children:[(0,s.jsx)(t.code,{children:"<lukso-working-directory>"})," "]})}),(0,s.jsx)(t.td,{children:"The full path to your node's working directory."}),(0,s.jsxs)(t.td,{children:["Use SSH to connect to your node, enter your node's working directory, and run the ",(0,s.jsx)(t.code,{children:"pwd"})," command to get it's full path."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsxs)("nobr",{children:[(0,s.jsx)(t.code,{children:"<keyfolder>"})," "]})}),(0,s.jsx)(t.td,{children:"Name for the validator folder."}),(0,s.jsx)(t.td,{children:"Define a name for the copied file's folder on your node, either the same as your personal computer or a new one."})]})]})]}),"\n",(0,s.jsx)(t.admonition,{type:"tip",children:(0,s.jsx)(t.p,{children:"If you have multiple deposit folders, copy one folder at the time and perform this step several times."})}),"\n",(0,s.jsx)(t.h2,{id:"2-import-validator-keys",children:"2. Import Validator Keys"}),"\n",(0,s.jsx)(t.p,{children:"Once all validator key files got transferred over, import your keys within the LUKSO CLI. You will be asked for the path of the previously defined name of the key folder."}),"\n",(0,s.jsx)(t.admonition,{type:"warning",children:(0,s.jsx)(t.p,{children:"During the first import process, a new password for starting your validator node must be defined to secure the consensus client's wallet. Make sure to use a strong passphrase. It will be used to startup the staking process of your node."})}),"\n",(0,s.jsx)(t.admonition,{type:"info",children:(0,s.jsxs)(t.p,{children:["The following steps are performed on your \ud83d\udcdf ",(0,s.jsx)(t.strong,{children:"node server"}),"."]})}),"\n",(0,s.jsxs)(i.A,{groupId:"network-type",children:[(0,s.jsx)(a.A,{value:"mainnet",label:"Mainnet",default:!0,children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sh",children:'lukso validator import --validator-keys "<lukso-working-directory>/<keyfolder>"\n'})})}),(0,s.jsx)(a.A,{value:"testnet",label:"Testnet",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sh",children:'lukso validator import --testnet --validator-keys "<lukso-working-directory>/<keyfolder>"\n'})})})]}),"\n",(0,s.jsx)(t.admonition,{type:"tip",children:(0,s.jsxs)(t.p,{children:["During the import of the keys, you will be promted to enter the password of the ",(0,s.jsx)(t.a,{href:"/docs/guides/validator-setup/wagyu-key-generation",children:"generated deposit keys"}),"."]})}),"\n",(0,s.jsx)(t.admonition,{type:"info",children:(0,s.jsx)(t.p,{children:"If you have multiple deposit folders, import one folder at the time and re-type both wallet andkey passwords on each round."})}),"\n",(0,s.jsxs)(t.admonition,{title:"Folder Structure",type:"note",children:[(0,s.jsx)(t.p,{children:"The import command will generate a new keystore folder within the working directory housing all imported validator accounts."}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-text",children:"lukso-node\n\u2502\n\u251c\u2500\u2500\u2500configs                                   // Configuration Files\n\u251c\u2500\u2500\u2500[network]-logs                            // Network's Logged Status Messages\n\u251c\u2500\u2500\u2500[network]-data                            // Network's Blockchain Data\n\u251c\u2500\u2500\u2500[network]-keystore                        // Network's Validator Keystore List\n|\n\u2514\u2500\u2500\u2500cli-config.yaml                           // Global CLI Configuration\n"})})]}),"\n",(0,s.jsx)(t.h2,{id:"3-verify-imported-accounts",children:"3. Verify Imported Accounts"}),"\n",(0,s.jsx)(t.p,{children:"After importing one or multiple folders, you can check your imported keys."}),"\n",(0,s.jsxs)(i.A,{groupId:"network-type",children:[(0,s.jsx)(a.A,{value:"mainnet",label:"Mainnet",default:!0,children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sh",children:'# LUKSO CLI v. 0.6.0+\nlukso validator list --mainnet\n\n# Lukso CLI v. <0.6.0\nvalidator accounts list --wallet-dir "mainnet-keystore"\n'})})}),(0,s.jsx)(a.A,{value:"testnet",label:"Testnet",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sh",children:'# LUKSO CLI v. 0.6.0+\nlukso validator list --testnet\n\n# Lukso CLI v. <0.6.0\nvalidator accounts list --wallet-dir "testnet-keystore"\n'})})})]}),"\n",(0,s.jsx)(t.h2,{id:"4-remove-the-key-folder",children:"4. Remove the Key Folder"}),"\n",(0,s.jsx)(t.p,{children:"If the imported keys match the ones in the original deposits, you can delete the folder with the deposit keys."}),"\n",(0,s.jsx)(t.admonition,{type:"info",children:(0,s.jsxs)(t.p,{children:["You can use the ",(0,s.jsx)(t.code,{children:"rm"})," command to remove files and directories while using the ",(0,s.jsx)(t.code,{children:"-r"})," recursive method. The flag will ensure to remove directories and their contents. You can further skip the confirmation questions or file errors using ",(0,s.jsx)(t.code,{children:"-rf"})," instead."]})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sh",children:"rm -rf <lukso-working-directory>/<keyfolder>\n"})}),"\n",(0,s.jsx)(t.admonition,{type:"info",children:(0,s.jsx)(t.p,{children:"Make sure to adjust the path to your key-folder and repeat the process for every folder that was transferred."})}),"\n",(0,s.jsx)(t.h2,{id:"5-start-the-validator",children:"5. Start the Validator"}),"\n",(0,s.jsx)(t.p,{children:"After importing your keys, you can rstart the node with the validator functionality to begin staking."}),"\n",(0,s.jsxs)(t.admonition,{type:"info",children:[(0,s.jsx)(t.p,{children:"To start the validator, you have to pass a minimum of two flags:"}),(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"--validator"}),": Starts the configured clients and their validator client."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"--transaction-fee-recipient"}),": Defines the address to which block rewards and transaction tips will be paid out."]}),"\n"]})]}),"\n",(0,s.jsx)(t.admonition,{type:"tip",children:(0,s.jsx)(t.p,{children:"The recipient can be any Ethereum address of a wallet you have control over and is able to connect with custom networks. Ledger accounts, for instance, are secure hardware-wallets and can be imported into MetaMask to send transactions on custom networks. If you withdraw or transfer the money regularly, you can also store the funds in a browser wallet. The address can be updated every time the node is restarted."})}),"\n",(0,s.jsxs)(i.A,{children:[(0,s.jsxs)(a.A,{value:"regular-sync",label:"Regular Synchronization",children:[(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sh",children:'# Starting the Mainnet Node as Validator\nlukso start --validator --transaction-fee-recipient "<transaction-fee-recipient-address>"\n\n# Starting the Testnet Node as Validator\nlukso start --validator --transaction-fee-recipient "<transaction-fee-recipient-address>" --testnet\n'})}),(0,s.jsx)(t.admonition,{type:"info",children:(0,s.jsxs)(t.p,{children:["Replace ",(0,s.jsx)(t.code,{children:"<transaction-fee-recipient-address>"})," with your actual withdrawal address."]})})]}),(0,s.jsxs)(a.A,{value:"automated-checkpoints",label:"Automated Checkpoints",children:[(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sh",children:'# Starting the Mainnet Node as Validator\nlukso start --validator --transaction-fee-recipient "<transaction-fee-recipient-address>" --checkpoint-sync\n\n# Starting the Testnet Node as Validator\nlukso start --validator --testnet --transaction-fee-recipient "<transaction-fee-recipient-address>" --checkpoint-sync\n'})}),(0,s.jsx)(t.admonition,{type:"info",children:(0,s.jsxs)(t.p,{children:["Replace ",(0,s.jsx)(t.code,{children:"<transaction-fee-recipient-address>"})," with your actual withdrawal address."]})})]}),(0,s.jsxs)(a.A,{value:"manual-checkpoints",label:"Manual Checkpoints",children:[(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["Visit the ",(0,s.jsx)(t.a,{href:"https://checkpoints.mainnet.lukso.network/",children:"Mainnet Checkpoint Explorer"})," or ",(0,s.jsx)(t.a,{href:"https://checkpoints.testnet.lukso.network/",children:"Testnet Checkpoint Explorer"})]}),"\n",(0,s.jsxs)(t.li,{children:["Pass the latest ",(0,s.jsx)(t.strong,{children:"Block Root"})," and ",(0,s.jsx)(t.strong,{children:"Epoch"})," values to the consensus client flags"]}),"\n"]}),(0,s.jsxs)(i.A,{children:[(0,s.jsx)(a.A,{value:"lighthouse",label:"Lighthouse",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sh",children:'# Starting the Mainnet Node as Validator\nlukso start --validator \\\n  --transaction-fee-recipient "<transaction-fee-recipient-address>" \\\n  --lighthouse-checkpoint-sync-url=https://checkpoints.mainnet.lukso.network \\\n  --lighthouse-genesis-state-url=https://checkpoints.mainnet.lukso.network \\\n  --lighthouse-wss-checkpoint=$<BLOCK_ROOT>:$<EPOCH>\n\n# Starting the Testnet Node as Validator\nlukso start --validator --testnet \\\n  --transaction-fee-recipient "<transaction-fee-recipient-address>" \\\n  --lighthouse-checkpoint-sync-url=https://checkpoints.testnet.lukso.network \\\n  --lighthouse-genesis-state-url=https://checkpoints.testnet.lukso.network \\\n  --lighthouse-wss-checkpoint=$<BLOCK_ROOT>:$<EPOCH>\n'})})}),(0,s.jsx)(a.A,{value:"teku",label:"Teku",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sh",children:'# Starting the Mainnet Node as Validator\nlukso start --validator \\\n  --transaction-fee-recipient "<transaction-fee-recipient-address>" \\\n  --teku-checkpoint-sync-url=https://checkpoints.mainnet.lukso.network \\\n  --teku-ws-checkpoint=$<BLOCK_ROOT>:$<EPOCH>\n\n# Starting the Testnet Node as Validator\nlukso start --validator --testnet \\\n  --transaction-fee-recipient "<transaction-fee-recipient-address>" \\\n  --teku-checkpoint-sync-url=https://checkpoints.testnet.lukso.network \\\n  --teku-ws-checkpoint=$<BLOCK_ROOT>:$<EPOCH>\n'})})}),(0,s.jsx)(a.A,{value:"prysm",label:"Prysm",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sh",children:'# Starting the Mainnet Node as Validator\nlukso start --validator \\\n  --transaction-fee-recipient "<transaction-fee-recipient-address>" \\\n  --prysm-checkpoint-sync-url=https://checkpoints.mainnet.lukso.network \\\n  --prysm-genesis-beacon-api-url=https://checkpoints.mainnet.lukso.network \\\n  --prysm-weak-subjectivity-checkpoint=$<BLOCK_ROOT>:$<EPOCH>\n\n# Starting the Testnet Node as Validator\nlukso start --validator --testnet \\\n  --transaction-fee-recipient "<transaction-fee-recipient-address>" \\\n  --prysm-checkpoint-sync-url=https://checkpoints.testnet.lukso.network \\\n  --prysm-genesis-beacon-api-url=https://checkpoints.testnet.lukso.network \\\n  --prysm-weak-subjectivity-checkpoint=$<BLOCK_ROOT>:$<EPOCH>\n'})})}),(0,s.jsx)(a.A,{value:"nimbus2",label:"Nimbus-Eth2",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sh",children:'# Starting the Mainnet Node as Validator\nlukso start --validator \\\n  --transaction-fee-recipient "<transaction-fee-recipient-address>" \\\n  --nimbus2-external-beacon-api-url=https://checkpoints.mainnet.lukso.network \\\n  --nimbus2-trusted-block-root=$<BLOCK_ROOT> \\\n  --nimbus2-weak-subjectivity-checkpoint=$<BLOCK_ROOT>:$<EPOCH>\n\n# Starting the Testnet Node as Validator\nlukso start --validator --testnet \\\n  --transaction-fee-recipient "<transaction-fee-recipient-address>" \\\n  --nimbus2-external-beacon-api-url=https://checkpoints.testnet.lukso.network\n  --nimbus2-trusted-block-root=$<BLOCK_ROOT> \\\n  --nimbus2-weak-subjectivity-checkpoint=$<BLOCK_ROOT>:$<EPOCH>\n'})})})]}),(0,s.jsxs)(t.admonition,{type:"info",children:[(0,s.jsx)(t.p,{children:"Replace the following parameters of the commands:"}),(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"<BLOCK_ROOT>"})," and ",(0,s.jsx)(t.code,{children:"<EPOCH>"})," with the current hash and number while keeping the ",(0,s.jsx)(t.code,{children:"$"})," sign."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"<transaction-fee-recipient-address>"})," with your actual withdrawal address."]}),"\n"]})]})]})]})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},1470:(e,t,n)=>{n.d(t,{A:()=>w});var r=n(6540),s=n(4164),o=n(7559),i=n(3104),a=n(6347),l=n(205),d=n(7485),c=n(1682),h=n(679);function u(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??function(e){return u(e).map((({props:{value:e,label:t,attributes:n,default:r}})=>({value:e,label:t,attributes:n,default:r})))}(n);return function(e){const t=(0,c.XI)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function f({value:e,tabValues:t}){return t.some((t=>t.value===e))}function m({queryString:e=!1,groupId:t}){const n=(0,a.W6)(),s=function({queryString:e=!1,groupId:t}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:e,groupId:t});return[(0,d.aZ)(s),(0,r.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(n.location.search);t.set(s,e),n.replace({...n.location,search:t.toString()})}),[s,n])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:s}=e,o=p(e),[i,a]=(0,r.useState)((()=>function({defaultValue:e,tabValues:t}){if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!f({value:e,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const n=t.find((e=>e.default))??t[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:o}))),[d,c]=m({queryString:n,groupId:s}),[u,g]=function({groupId:e}){const t=function(e){return e?`docusaurus.tab.${e}`:null}(e),[n,s]=(0,h.Dv)(t);return[n,(0,r.useCallback)((e=>{t&&s.set(e)}),[t,s])]}({groupId:s}),k=(()=>{const e=d??u;return f({value:e,tabValues:o})?e:null})();(0,l.A)((()=>{k&&a(k)}),[k]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!f({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);a(e),c(e),g(e)}),[c,g,o]),tabValues:o}}var k=n(2303);const y={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=n(4848);function j({className:e,block:t,selectedValue:n,selectValue:r,tabValues:o}){const a=[],{blockElementScrollPositionUntilNextRender:l}=(0,i.a_)(),d=e=>{const t=e.currentTarget,s=a.indexOf(t),i=o[s].value;i!==n&&(l(t),r(i))},c=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=a.indexOf(e.currentTarget)+1;t=a[n]??a[0];break}case"ArrowLeft":{const n=a.indexOf(e.currentTarget)-1;t=a[n]??a[a.length-1];break}}t?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":t},e),children:o.map((({value:e,label:t,attributes:r})=>(0,x.jsx)("li",{role:"tab",tabIndex:n===e?0:-1,"aria-selected":n===e,ref:e=>{a.push(e)},onKeyDown:c,onClick:d,...r,className:(0,s.A)("tabs__item",y.tabItem,r?.className,{"tabs__item--active":n===e}),children:t??e},e)))})}function v({lazy:e,children:t,selectedValue:n}){const o=(Array.isArray(t)?t:[t]).filter(Boolean);if(e){const e=o.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:o.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n})))})}function b(e){const t=g(e);return(0,x.jsxs)("div",{className:(0,s.A)(o.G.tabs.container,"tabs-container",y.tabList),children:[(0,x.jsx)(j,{...t,...e}),(0,x.jsx)(v,{...t,...e})]})}function w(e){const t=(0,k.A)();return(0,x.jsx)(b,{...e,children:u(e.children)},String(t))}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>a});var r=n(6540);const s={},o=r.createContext(s);function i(e){const t=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(o.Provider,{value:t},e.children)}},9365:(e,t,n)=>{n.d(t,{A:()=>i});n(6540);var r=n(4164);const s={tabItem:"tabItem_Ymn6"};var o=n(4848);function i({children:e,hidden:t,className:n}){return(0,o.jsx)("div",{role:"tabpanel",className:(0,r.A)(s.tabItem,n),hidden:t,children:e})}}}]);