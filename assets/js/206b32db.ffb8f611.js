"use strict";(self.webpackChunklukso_node_guide=self.webpackChunklukso_node_guide||[]).push([[9484],{8119:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"guides/alert-systems/image-rendering","title":"9.3 Image Rendering","description":"This page is currently under maintenance reworked and contains outdated content.","source":"@site/docs/guides/alert-systems/image-rendering.md","sourceDirName":"guides/alert-systems","slug":"/guides/alert-systems/image-rendering","permalink":"/docs/guides/alert-systems/image-rendering","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_label":"9.3 Image Rendering","sidebar_position":3},"sidebar":"guidesSidebar","previous":{"title":"9.2 Grafana Notifications","permalink":"/docs/guides/alert-systems/grafana-notifications"},"next":{"title":"10.1 Tailscale","permalink":"/docs/guides/external-access/tailscale"}}');var i=a(4848),r=a(8453);const s={sidebar_label:"9.3 Image Rendering",sidebar_position:3},o="9.3 Image Rendering",l={},c=[{value:"1. Install Grafana Image Renderer",id:"1-install-grafana-image-renderer",level:2},{value:"2. Apply Notification Settings",id:"2-apply-notification-settings",level:2},{value:"3. Enable Continuous Notifications",id:"3-enable-continuous-notifications",level:2},{value:"4. Permanent Alerts",id:"4-permanent-alerts",level:2}];function d(e){const n={admonition:"admonition",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"93-image-rendering",children:"9.3 Image Rendering"})}),"\n",(0,i.jsx)(n.admonition,{type:"danger",children:(0,i.jsx)(n.p,{children:"This page is currently under maintenance reworked and contains outdated content."})}),"\n",(0,i.jsx)(n.h2,{id:"1-install-grafana-image-renderer",children:"1. Install Grafana Image Renderer"}),"\n",(0,i.jsx)(n.p,{children:"If you want pictures or graphs added to your regular notifications, you can install the Grafana Image Renderer. It can be installed via the built-in Grafana CLI:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"sudo grafana-cli plugins install grafana-image-renderer\n"})}),"\n",(0,i.jsx)(n.p,{children:"Afterward, restart Grafana for the dependency to show up:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"sudo systemctl restart grafana-server\n"})}),"\n",(0,i.jsx)(n.p,{children:"Check the status of the Grafana Server:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"# Check status\nsystemctl status grafana-server\n"})}),"\n",(0,i.jsx)(n.p,{children:"The output should look similar to this:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"\u25cf grafana-server.service - Grafana instance\n     Loaded: loaded (/lib/systemd/system/grafana-server.service; enabled; vendo>\n     Active: active (running) since [DATE] UTC; [TIME] ago\n       Docs: http://docs.grafana.org\n   Main PID: 28472 (grafana)\n      Tasks: 30 (limit: 38043)\n     Memory: 150.4M\n        CPU: 6min 59.027s\n     CGroup: /system.slice/grafana-server.service\n             \u251c\u250028472 /usr/share/grafana/bin/grafana server --config=/etc/grafan>\n             \u2514\u250028490 /var/lib/grafana/plugins/grafana-image-renderer/plugin_sta>\n\n[DATE] [TIME] [USER] grafana-server[28472]: logger=context userId=1 orgI>...\n...\n"})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"WARNING"}),": The following section is still Work in Progress for Grafana 9, as windows and settings have changed in terms of names, behavior, and placement."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"2-apply-notification-settings",children:"2. Apply Notification Settings"}),"\n",(0,i.jsx)(n.p,{children:"After Grafana is up and running again, go to the Grafana webpage."}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Click on the notification icon on the left menu bar."}),"\n",(0,i.jsxs)(n.li,{children:["Move to the ",(0,i.jsx)(n.code,{children:"notification channels"})," on the second tab."]}),"\n",(0,i.jsx)(n.li,{children:"Open your node's notification channel."}),"\n",(0,i.jsxs)(n.li,{children:["Activate image rendering by enabling ",(0,i.jsx)(n.code,{children:"Include Image"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Click the ",(0,i.jsx)(n.code,{children:"Save"})," button."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"From now on, all notifications you've set up will automatically send graphs."}),"\n",(0,i.jsx)(n.h2,{id:"3-enable-continuous-notifications",children:"3. Enable Continuous Notifications"}),"\n",(0,i.jsxs)(n.p,{children:["Within the notification dashboard of the node, you can also activate ",(0,i.jsx)(n.code,{children:"send reminders"}),". Alert reminders are sent after notification rules are evaluated and a certain amount of time has passed."]}),"\n",(0,i.jsx)(n.p,{children:"By setting it to 1h, you will get a notification every hour if a critical error or status has not changed. Continuous notification behavior is helpful if you want regular node status reports."}),"\n",(0,i.jsx)(n.h2,{id:"4-permanent-alerts",children:"4. Permanent Alerts"}),"\n",(0,i.jsx)(n.p,{children:"After enabling it on the notification dashboard, you could head over to your node's dashboard and clone or create a new notification. For it to show permanent notifications at a constant rate, you can set a metric so high that it is never supposed to be reached. For instance: If you want hourly updates on the participation rate, you can select the alert for under 100% participation. In this case, you would get a graph of the network participation once an hour."})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>s,x:()=>o});var t=a(6540);const i={},r=t.createContext(i);function s(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);