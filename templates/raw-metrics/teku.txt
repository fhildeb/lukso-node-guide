RAW TEKU METRICS CALCULATION

- Peer Count:                           "expr": "libp2p_peers{job=\"consensus-client-job\"}",
- Active Validators:                    "expr": "beacon_current_active_validators{job=\"consensus-client-job\", state=\"active\"}",
- Local Validators:                     "expr": "sum(validator_local_validator_count{job=\"validator-client-job\"})"
- Total Validator Balance               "expr": "sum(validator_local_validator_count{job=\"validator-client-job\"})*32"
- Published Blocks                      "expr": "sum(validator_beacon_node_requests_total{job=\"validator-client-job\",method=\"publish_block\",outcome=\"success\"})"
- Published Attestations                "expr": "sum(validator_beacon_node_requests_total{job=\"validator-client-job\",method=\"publish_attestation\",outcome=\"success\"})"
- Published Aggregates                  "expr": "sum(validator_beacon_node_requests_total{job=\"validator-client-job\",method=\"publish_aggregate_and_proofs\",outcome=\"success\"})"
- Successful Attestations:              "expr": "validator_performance_included_sync_committee_messages{job=\"validator-client-job\"} / validator_performance_expected_sync_committee_messages{job=\"validator-client-job\"}",  

- Included Attestations:                "expr": "validator_performance_included_attestations{instance=~\"$system\"} / validator_performance_expected_attestations{instance=~\"$system\"}",
- Correct Head Block:                   "expr": "validator_performance_correct_head_block_count{instance=~\"$system\"} / validator_performance_included_attestations{instance=~\"$system\"}",
- Correct Target Count:                 "expr": "validator_performance_correct_target_count{instance=~\"$system\"} / validator_performance_included_attestations{instance=~\"$system\"}",
- Attestation Reward Earned:            "expr": "\n(\nvalidator_performance_correct_head_block_count{instance=~\"$system\"} - (validator_performance_expected_attestations{instance=~\"$system\"} - validator_performance_correct_head_block_count{instance=~\"$system\"}) +\nvalidator_performance_correct_target_count{instance=~\"$system\"} - (validator_performance_expected_attestations{instance=~\"$system\"} - validator_performance_correct_target_count{instance=~\"$system\"}) +\nvalidator_performance_included_attestations{instance=~\"$system\"} - (validator_performance_expected_attestations{instance=~\"$system\"} - validator_performance_included_attestations{instance=~\"$system\"}) +\n(0.875  * validator_performance_included_attestations{instance=~\"$system\"} / validator_performance_inclusion_distance_average{instance=~\"$system\"})\n) / validator_performance_expected_attestations{instance=~\"$system\"} / 3.875",
- Included Signatures:                  "expr": "validator_performance_included_sync_committee_messages{instance=~\"$system\"} / validator_performance_expected_sync_committee_messages{instance=~\"$system\"}",
- Produced Signatures:                  "expr": "validator_performance_produced_sync_committee_messages{instance=~\"$system\"} / validator_performance_expected_sync_committee_messages{instance=~\"$system\"}",
- Correct Signatures:                   "expr": "validator_performance_correct_sync_committee_messages{instance=~\"$system\"} / validator_performance_produced_sync_committee_messages{instance=~\"$system\"}",

UNCHANGED METRICS FROM PRYSM DASHBOARD

- Participation Rate Below 80%:         "expr": "(beacon_previous_live_validators{job=\"consensus-client-job\"} / beacon_previous_active_validators{job=\"consensus-client-job\"}) * 100",
- Participation Rate:                   "expr": "(beacon_previous_live_validators{job=\"consensus-client-job\"} / beacon_previous_active_validators{job=\"consensus-client-job\"})",
- Network Liveness:                     "expr": "clamp_min((1-(4*((floor(beacon_clock_time_slot{job=\"consensus-client-job\"}/32) - beacon_finalized_epoch{job=\"consensus-client-job\"} - 2)/100))),0)",
- 50 Slots Behind:                      "expr": "((beacon_clock_time_slot{job=\"consensus-client-job\"} / 32) - beacon_head_slot{job=\"consensus-client-job\"})",
- Finalized Epoch:                      "expr": "beacon_finalized_epoch {job=\"consensus-client-job\"} ",
- Current Epoch:                        "expr": "floor(beacon_clock_time_slot{job=\"consensus-client-job\"} / 32)",
- Justified Epoch:                      "expr": "beacon_current_justified_epoch{job=\"consensus-client-job\"}",
- Head Slot:                            "expr": "beacon_head_slot{job=\"consensus-client-job\"}",
- Current Slot:                         "expr": "beacon_slot{job=\"consensus-client-job\"}",
- Beacon Process Uptime:                "expr": "(time()-process_start_time_seconds{job=\"consensus-client-job\"})/3600",
- Validator Process Uptime:             "expr": "(time()-process_start_time_seconds{job=\"validator-client-job\"})/3600",
- Consensus Memory Usage:               "expr": "process_resident_memory_bytes{job=\"consensus-client-job\"}",
- Validator Memory Usage:               "expr": "process_resident_memory_bytes{job=\"validator-client-job\"}",
- Consensus Process Down:               "expr": "up{job=\"consensus-client-job\"}",
- Validator Process Down:               "expr": "up{job=\"validator-client-job\"}",
- Consensus Process Restarted:          "expr": "(time()-process_start_time_seconds{job=\"consensus-client-job\"})/3600",
- Validator Process Restarted:          "expr": "(time()-process_start_time_seconds{job=\"validator-client-job\"})/3600",

REMOVED METRICS FROM PRYSM DASHBOARD (NOT EXPOSED IN TEKU)

- Max Inactivity Score:                 "expr": "max(validator_inactivity_score{job=\"validator-client-job\"})",
- Failed Validator Attestations:        "expr": "label_replace(max by(pubkey) (validator_failed_attestations{job=\"validator-client-job\"}), \"pubkey_short\", \"$1\", \"pubkey\", \"(.{10}).*\") ",
- Failed Validator Aggregations:        "expr": "label_replace(max by(pubkey) (validator_failed_aggregations{job=\"validator-client-job\"}), \"pubkey_short\", \"$1\", \"pubkey\", \"(.{10}).*\") ",
- Validator Inactivity Scores:          "expr": "label_replace(max by(pubkey) (validator_inactivity_score{job=\"validator-client-job\"}), \"pubkey_short\", \"$1\", \"pubkey\", \"(.{10}).*\")  ",
- Validator Statuses:                   "expr": "label_replace(up{job=\"validator-client-job\"}, \"pubkey_short\", \"$1\", \"pubkey\", \"(.{10}).*\")  ",
- Validator Balances:                   "expr": "label_replace(max by(pubkey) (validator_balance{job=\"validator-client-job\"}), \"pubkey_short\", \"$1\", \"pubkey\", \"(.{10}).*\") ",
- Total Validator Balance:              "expr": "sum(validator_balance{job=\"validator-client-job\"})",
- Withdrawal Earnings:                  "expr": "sum(validator_balance{job=\"validator-client-job\"}) - (count(validator_balance{job=\"validator-client-job\"} > 16) * 32)",
- Withdrawal Return:                    "expr": "(sum(validator_balance{job=\"validator-client-job\"}) - (count(validator_balance{job=\"validator-client-job\"} > 16) * 32)) / (count(validator_balance{job=\"validator-client-job\"} > 16) * 32) ",
- Hourly Earnings:                      "expr": "sum(validator_balance{job=\"validator-client-job\"}) - sum(validator_balance{job=\"validator-client-job\"} offset 1h != 0) - (32 * count(validator_balance{job=\"validator-client-job\"} > 16)) + (32 * count(validator_balance{job=\"validator-client-job\"} offset 1h > 16))",
- Daily Earnings:                       "expr": "sum(validator_balance{job=\"validator-client-job\"}) - sum(validator_balance{job=\"validator-client-job\"} offset 1d != 0) - (32 * count(validator_balance{job=\"validator-client-job\"} > 16)) + (32 * count(validator_balance{job=\"validator-client-job\"} offset 1d > 16))",
- Weekly Earnings:                      "expr": "sum(validator_balance{job=\"validator-client-job\"}) - sum(validator_balance{job=\"validator-client-job\"} offset 7d != 0) - (32 * count(validator_balance{job=\"validator-client-job\"} > 16)) + (32 * count(validator_balance{job=\"validator-client-job\"} offset 7d > 16))",
- Monthly Earnings:                     "expr": "sum(validator_balance{job=\"validator-client-job\"}) - sum(validator_balance{job=\"validator-client-job\"} offset 30d != 0) - (32 * count(validator_balance{job=\"validator-client-job\"} > 16)) + (32 * count(validator_balance{job=\"validator-client-job\"} offset 30d > 16))",                  
- Hourly Return Annualized:             "expr": "((sum(validator_balance{job=\"validator-client-job\"}) - sum(validator_balance{job=\"validator-client-job\"} offset 1h != 0) - (32 * count(validator_balance{job=\"validator-client-job\"} > 16)) +\t(32 * count(validator_balance{job=\"validator-client-job\"} offset 1h > 16)))/(32 * avg_over_time(count(validator_balance{job=\"validator-client-job\"} > 16)[1h:]))) * 365 * 24",
- Daily Return Annualized:              "expr": "((sum(validator_balance{job=\"validator-client-job\"}) - sum(validator_balance{job=\"validator-client-job\"} offset 1d != 0) - (32 * count(validator_balance{job=\"validator-client-job\"} > 16)) +\t(32 * count(validator_balance{job=\"validator-client-job\"} offset 1d > 16)))/(32 * avg_over_time(count(validator_balance{job=\"validator-client-job\"} > 16)[1d:]))) * 365",
- Weekly Return Annualized:             "expr": "((sum(validator_balance{job=\"validator-client-job\"}) - sum(validator_balance{job=\"validator-client-job\"} offset 7d != 0) - (32 * count(validator_balance{job=\"validator-client-job\"} > 16)) +\t(32 * count(validator_balance{job=\"validator-client-job\"} offset 7d > 16)))/(32 * avg_over_time(count(validator_balance{job=\"validator-client-job\"} > 16)[7d:]))) * (365/7)",
- Monthly Return Annualized:            "expr": "((sum(validator_balance{job=\"validator-client-job\"}) - sum(validator_balance{job=\"validator-client-job\"} offset 30d != 0) - (32 * count(validator_balance{job=\"validator-client-job\"} > 16)) +\t(32 * count(validator_balance{job=\"validator-client-job\"} offset 30d > 16)))/(32 * avg_over_time(count(validator_balance{job=\"validator-client-job\"} > 16)[30d:]))) * (365/30)",
- Slashing Validators:                  "expr": "validator_count{state=\"Slashing\",job=\"consensus-client-job\"}",

REMOVED METRICS FROM TEKU DASHBOARD (NOT WORKING)

- Average Balance:                      "expr": "((beacon_prev_epoch_active_gwei{job=\"consensus-client-job\"}) / 1e9) / (beacon_current_active_validators{job=\"consensus-client-job\"})",
- Successful Validator Proposals:       "expr": "sum(validator_beacon_node_requests_total{job=\"validator-client-job\",type=\"PUBLISH_BLOCK\",status=\"SUCCESS\"})",
- Successful Validator Attestations:    "expr": "sum(validator_beacon_node_requests_total{job=\"validator-client-job\",type=\"PUBLISH_ATTESTATION\",status=\"SUCCESS\"})",
- Successful Validator Aggregations:    "expr": "sum(validator_beacon_node_requests_total{job=\"validator-client-job\",type=~\"PUBLISH_AGGREGATE|SYNC_CONTRIBUTION\",status=\"SUCCESS\"})",
- Versions:                             "expr": "max(teku_build_info{job=\"consensus-client-job\"}) by (version)",
- Slashed Validators:                   "expr": "beacon_current_slashed_validators{job=\"consensus-client-job\"}",
- Exited Validators:                    "expr": "beacon_current_exited_validators{job=\"consensus-client-job\"}",
- Pending Validators:                   "expr": "beacon_current_pending_validators{job=\"consensus-client-job\"}",
- Exiting Validators:                   "expr": "beacon_current_exiting_validators{job=\"consensus-client-job\"}",
- Pending Queue Length:                 "expr": "beacon_current_pending_validators{job=\"consensus-client-job\"}",
- Exiting Queue Length:                 "expr": "beacon_current_exiting_validators{job=\"consensus-client-job\"}",
- Beacon Log Errors per Hour:           "expr": "sum(rate(log_entries_total{job=\"consensus-client-job\", level=\"error\"}[$__range]))*3600",
- Beacon Log Warnings per Hour:         "expr": "sum(rate(log_entries_total{job=\"consensus-client-job\", level=\"warning\"}[$__range]))*3600",
- Validator Log Errors per Hour:        "expr": "sum(rate(log_entries_total{job=\"validator-client-job\", level=\"error\"}[$__range]))*3600",
- Validator Log Warnings per Hour:      "expr": "sum(rate(log_entries_total{job=\"validator-client-job\", level=\"warning\"}[$__range]))*3600",